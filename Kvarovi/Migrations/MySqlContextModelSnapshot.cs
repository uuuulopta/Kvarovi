// <auto-generated />
using System;
using Kvarovi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kvarovi.Migrations
{
    [DbContext(typeof(MySqlContext))]
    partial class MySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AnnouncementKeyword", b =>
                {
                    b.Property<int>("AnnouncementsAnnouncementId")
                        .HasColumnType("int")
                        .HasColumnName("announcementsannouncementid");

                    b.Property<int>("KeywordsKeywordId")
                        .HasColumnType("int")
                        .HasColumnName("keywordskeywordid");

                    b.HasKey("AnnouncementsAnnouncementId", "KeywordsKeywordId")
                        .HasName("pk_announcementkeyword");

                    b.HasIndex("KeywordsKeywordId")
                        .HasDatabaseName("ix_announcementkeyword_keywordskeywordid");

                    b.ToTable("announcementkeyword", (string)null);
                });

            modelBuilder.Entity("KeywordUser", b =>
                {
                    b.Property<int>("KeywordsKeywordId")
                        .HasColumnType("int")
                        .HasColumnName("keywordskeywordid");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int")
                        .HasColumnName("usersuserid");

                    b.HasKey("KeywordsKeywordId", "UsersUserId")
                        .HasName("pk_keyworduser");

                    b.HasIndex("UsersUserId")
                        .HasDatabaseName("ix_keyworduser_usersuserid");

                    b.ToTable("keyworduser", (string)null);
                });

            modelBuilder.Entity("Kvarovi.Entities.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("announcementid");

                    b.Property<int>("AnnouncementTypeId")
                        .HasColumnType("int")
                        .HasColumnName("announcementtypeid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.HasKey("AnnouncementId")
                        .HasName("pk_announcement");

                    b.HasIndex("AnnouncementTypeId")
                        .HasDatabaseName("ix_announcement_announcementtypeid");

                    b.ToTable("announcement", (string)null);
                });

            modelBuilder.Entity("Kvarovi.Entities.AnnouncementType", b =>
                {
                    b.Property<int>("AnnouncementTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("announcementtypeid");

                    b.Property<string>("AnnouncementTypeName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("announcementtypename");

                    b.HasKey("AnnouncementTypeId")
                        .HasName("pk_announcementtype");

                    b.ToTable("announcementtype", (string)null);
                });

            modelBuilder.Entity("Kvarovi.Entities.Keyword", b =>
                {
                    b.Property<int>("KeywordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("keywordid");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("word");

                    b.HasKey("KeywordId")
                        .HasName("pk_keyword");

                    b.HasIndex("Word")
                        .IsUnique()
                        .HasDatabaseName("ix_keyword_word");

                    b.ToTable("keyword", (string)null);
                });

            modelBuilder.Entity("Kvarovi.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.Property<string>("DeviceToken")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("devicetoken");

                    b.HasKey("UserId")
                        .HasName("pk_user");

                    b.HasIndex("DeviceToken")
                        .IsUnique()
                        .HasDatabaseName("ix_user_devicetoken");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("AnnouncementKeyword", b =>
                {
                    b.HasOne("Kvarovi.Entities.Announcement", null)
                        .WithMany()
                        .HasForeignKey("AnnouncementsAnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_announcementkeyword_announcement_announcementsannouncementid");

                    b.HasOne("Kvarovi.Entities.Keyword", null)
                        .WithMany()
                        .HasForeignKey("KeywordsKeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_announcementkeyword_keyword_keywordskeywordid");
                });

            modelBuilder.Entity("KeywordUser", b =>
                {
                    b.HasOne("Kvarovi.Entities.Keyword", null)
                        .WithMany()
                        .HasForeignKey("KeywordsKeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_keyworduser_keyword_keywordskeywordid");

                    b.HasOne("Kvarovi.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_keyworduser_user_usersuserid");
                });

            modelBuilder.Entity("Kvarovi.Entities.Announcement", b =>
                {
                    b.HasOne("Kvarovi.Entities.AnnouncementType", "AnnouncementType")
                        .WithMany()
                        .HasForeignKey("AnnouncementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_announcement_announcementtype_announcementtypeid");

                    b.Navigation("AnnouncementType");
                });
#pragma warning restore 612, 618
        }
    }
}
